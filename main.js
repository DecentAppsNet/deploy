async function C(t,e){let n=t.length,r=[...t];return new Promise((o,s)=>{function i(c){c().then(()=>{if(--n===0){o();return}if(r&&r.length){let u=r.pop();u&&i(u)}}).catch(u=>s(u))}let a=Math.min(e,t.length);for(let c=0;c<a;++c){let u=r.pop();u&&i(u)}}).catch(o=>{throw o})}function z(t){return/^[0-9a-f]{7}$/i.test(t)}function K(t){return/^[0-9a-f]{40}$/i.test(t)}function $(t){return z(t)||K(t)}function v(t){return t.length>7?t.slice(0,7):t}var m=class extends Error{constructor(e){super(e),this.name="ExpectedError"}},p=m;function Y(t){console.error(`::error::${t}`)}function R(t){console.warn(`::warning::${t}`)}function X(t){console.log(`::notice::${t}`)}function S(t){X(`\u2705 ${t}`)}function P(t){console.log(t)}function g(t){Y(t),process.exit(1)}function h(t,e=!1){let n=`INPUT_${t.replace(/ /g,"_").toUpperCase()}`,r=process.env[n];return e&&!r&&g(`Input ${t} is required.`),r||""}function b(){let t=process.env.GITHUB_SHA;if(!t)throw new p("GITHUB_SHA environment variable is not set.");if(!$(t))throw new p("GITHUB_SHA environment variable is invalid.");return v(t)}function E(){let t=process.env.GITHUB_REPOSITORY_OWNER;if(!t)throw new p("GITHUB_REPOSITORY_OWNER environment variable is not set.");return t}function V(){let t=process.env.GITHUB_WORKSPACE;if(!t)throw new p("GITHUB_WORKSPACE environment variable is not set.");return t}function O(){return process.env.GITHUB_ACTIONS==="true"}var J=["key","token","password","secret"];function Q(t){if(!t)return t;let e=t.charAt(0),n=t.charAt(t.length-1);return`${e}...${n}`}function T(){let t=Object.entries(process.env).map(([e,n])=>{let r=e.toLowerCase();return J.some(o=>r.includes(o))&&(n=Q(n)),`${e}=${n}`}).join(`
`);P(`Environment Variables:
${t}`)}import{opendir as Z,stat as xt,mkdir as wt}from"fs/promises";import{createReadStream as Ct,createWriteStream as tt}from"fs";import _ from"path";async function I(t){let e=[];async function n(r){let o=await Z(r);for await(let s of o){let i=_.join(r,s.name);s.isDirectory()?await n(i):e.push(i)}}return await n(t),e}async function et(t,e){return new Promise((n,r)=>{let o=tt(t);o.write(e),o.end(),o.on("finish",()=>n()),o.on("error",s=>r(s))}).catch(n=>{throw n})}async function nt(t,e){return et(t,e)}async function A(t,e){let n=_.join(e,"version.txt");return await nt(n,t)}import*as x from"node:https";import{createReadStream as rt}from"fs";import{stat as ot}from"fs/promises";async function F(t,e){let n=await ot(e);return new Promise((r,o)=>{t.headers||(t.headers={}),t.headers["Content-Length"]=n.size;let s=x.request(t,a=>{let c="";a.on("data",u=>{c+=u}),a.on("end",async()=>{a.statusCode&&a.statusCode>=200&&a.statusCode<300?r({statusCode:a.statusCode,body:c}):o(new p(`Request to ${t.hostname} failed with status code: ${a.statusCode}. Response: ${c}`))})});s.on("error",a=>o(a));let i=rt(e);i.pipe(s),i.on("end",()=>s.end()),i.on("error",a=>{s.destroy(),o(a)})}).catch(r=>{throw r})}async function k(t,e){return new Promise((n,r)=>{t.headers||(t.headers={}),t.headers["Content-Length"]=Buffer.byteLength(e);let o=x.request(t,s=>{let i="";s.on("data",a=>{i+=a}),s.on("end",async()=>{s.statusCode&&s.statusCode>=200&&s.statusCode<300?n({statusCode:s.statusCode,body:i}):r(new p(`Request to ${t.hostname} failed with status code: ${s.statusCode}. Response: ${i}`))})});o.on("error",s=>r(s)),o.write(e),o.end()}).catch(n=>{throw n})}var w="1.0",q=`v${w} Decent Tools`;function st(t){let e="<!-- v",n=t.indexOf(e);if(n===-1)return null;let r=n+e.length,o=t.indexOf(" ",r);return o===-1?null:t.substring(r,o)}function y(t,e){let n=` ${e}='`,r=t.indexOf(n);if(r===-1)return null;let o=r+n.length,s=t.indexOf("'",o);return s===-1?null:t.substring(o,s)}function it(t){let e=st(t);if(!e)throw Error("Failed to parse stage index format version.");if(e!==w)throw Error(`Unsupported stage index format version ${e}.`);return e}function U(){return{productionVersion:"",rollbackVersion:"",stageVersion:""}}function H(t,e,n,r){let o=`/_${t}/${e}/`;return`<!DOCTYPE html><html><head><title>Stage Index for ${t}</title><script>
<!-- ${q}. Hand-edit at your own risk! -->
const productionVersion='${n}';
const rollbackVersion='${r}';
const stageVersion='${e}';
window.location.href='${o}';
</script></head><body></body></html>`}async function B(t){let e=`https://decentapps.net/_${t}/index.html`,n=await fetch(e);if(!n.ok)return U();let r=await n.text();try{it(r)}catch(a){return R(`Could not retrieve app versions from existing stage index at ${e}: ${a.message}.`),U()}let o=y(r,"productionVersion")??"",s=y(r,"rollbackVersion")??"";return{stageVersion:y(r,"stageVersion")??"",productionVersion:o,rollbackVersion:s}}var D="partner.decentapps.net";async function N(t,e,n,r,o,s){let i=s.replace(o,""),a={hostname:D,path:`/api/deployment/${n}/${r}/${i}`,port:443,method:"PUT",headers:{"Content-Type":"application/octet-stream",Authorization:`Bearer ${e}`,"x-repo-owner":t,Accept:"application/json"}},c=await F(a,s);if(c.statusCode<200||c.statusCode>=300)throw new p(`Failed to upload file to partner service. Status code: ${c.statusCode}. Response: ${c.body}`)}async function G(t,e,n,r,o,s,i){let a=i?`/api/deployment/${n}/index.html`:`/api/deployment/${n}/index.html?updateRoute=true`,c={hostname:D,path:a,port:443,method:"PUT",headers:{"Content-Type":"text/html",Authorization:`Bearer ${e}`,"x-repo-owner":t,Accept:"application/json"}},u=H(n,r,o,s),f=await k(c,u);if(f.statusCode<200||f.statusCode>=300)throw new Error(`Failed to upload file to partner service. Status code: ${f.statusCode}. Response: ${f.body}`)}async function at(){try{T();let t=b(),e=E(),n=h("api-key",!0),r=h("app-name",!0),o=`${V()}/dist/`;await A(t,o);async function s(l){let d=i[l];if(d!=="")try{await N(e,n,r,t,o,d),i[l]="",++c}catch(j){console.warn(`Failed to upload file ${d}: ${j.message}.`)}}let i=await I(o),a=i.map((l,d)=>()=>s(d)),c=0,u=3,f=10;for(let l=0;l<u;++l){l>0&&console.warn(`Retrying after failed uploads... (${l+1}/${u})`);try{if(await C(a,f),c===i.length)break}catch(d){console.error(`Unexpected error while uploading files: ${d.message}.`)}}c<i.length&&(c===0&&g("Failed to upload any files. See previous warnings for details."),g(`Failed to upload all files. Only ${c} of ${i.length} files were uploaded successfully. See previous warnings for details.`));let{productionVersion:L,rollbackVersion:W}=await B(r);await G(e,n,r,t,L,W,!1);let M=`https://decentapps.net/_${r}/${t}/`;S(`Successfully deployed ${c} files to ${M}.`)}catch(t){let n=!O()||t.name==="ExpectedError"?t.message:"An unexpected error occurred.";g(n)}}at();
