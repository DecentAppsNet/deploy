async function C(t,e){let r=t.length,n=[...t];return new Promise((o,s)=>{function i(c){c().then(()=>{if(--r===0){o();return}if(n&&n.length){let u=n.pop();u&&i(u)}}).catch(u=>s(u))}let a=Math.min(e,t.length);for(let c=0;c<a;++c){let u=n.pop();u&&i(u)}}).catch(o=>{throw o})}function M(t){return/^[0-9a-f]{7}$/i.test(t)}function j(t){return/^[0-9a-f]{40}$/i.test(t)}function $(t){return M(t)||j(t)}function v(t){return t.length>7?t.slice(0,7):t}var h=class extends Error{constructor(e){super(e),this.name="ExpectedError"}},p=h;function z(t){console.error(`::error::${t}`)}function R(t){console.warn(`::warning::${t}`)}function K(t){console.log(`::notice::${t}`)}function S(t){K(`\u2705 ${t}`)}function g(t){z(t),process.exit(1)}function m(t,e=!1){let r=`INPUT_${t.replace(/-/g,"_").toUpperCase()}`,n=process.env[r];return e&&!n&&g(`Input ${t} is required.`),n||""}function P(){let t=process.env.GITHUB_SHA;if(!t)throw new p("GITHUB_SHA environment variable is not set.");if(!$(t))throw new p("GITHUB_SHA environment variable is invalid.");return v(t)}function T(){let t=process.env.GITHUB_REPOSITORY_OWNER;if(!t)throw new p("GITHUB_REPOSITORY_OWNER environment variable is not set.");return t}function b(){let t=process.env.GITHUB_WORKSPACE;if(!t)throw new p("GITHUB_WORKSPACE environment variable is not set.");return t}function O(){return process.env.GITHUB_ACTIONS==="true"}import{opendir as Y,stat as lt,mkdir as dt}from"fs/promises";import{createReadStream as gt,createWriteStream as X}from"fs";import E from"path";async function V(t){let e=[];async function r(n){let o=await Y(n);for await(let s of o){let i=E.join(n,s.name);s.isDirectory()?await r(i):e.push(i)}}return await r(t),e}async function J(t,e){return new Promise((r,n)=>{let o=X(t);o.write(e),o.end(),o.on("finish",()=>r()),o.on("error",s=>n(s))}).catch(r=>{throw r})}async function Q(t,e){return J(t,e)}async function _(t,e){let r=E.join(e,"version.txt");return await Q(r,t)}import*as x from"node:https";import{createReadStream as Z}from"fs";import{stat as tt}from"fs/promises";async function I(t,e){let r=await tt(e);return new Promise((n,o)=>{t.headers||(t.headers={}),t.headers["Content-Length"]=r.size;let s=x.request(t,a=>{let c="";a.on("data",u=>{c+=u}),a.on("end",async()=>{a.statusCode&&a.statusCode>=200&&a.statusCode<300?n({statusCode:a.statusCode,body:c}):o(new p(`Request to ${t.hostname} failed with status code: ${a.statusCode}. Response: ${c}`))})});s.on("error",a=>o(a));let i=Z(e);i.pipe(s),i.on("end",()=>s.end()),i.on("error",a=>{s.destroy(),o(a)})}).catch(n=>{throw n})}async function F(t,e){return new Promise((r,n)=>{t.headers||(t.headers={}),t.headers["Content-Length"]=Buffer.byteLength(e);let o=x.request(t,s=>{let i="";s.on("data",a=>{i+=a}),s.on("end",async()=>{s.statusCode&&s.statusCode>=200&&s.statusCode<300?r({statusCode:s.statusCode,body:i}):n(new p(`Request to ${t.hostname} failed with status code: ${s.statusCode}. Response: ${i}`))})});o.on("error",s=>n(s)),o.write(e),o.end()}).catch(r=>{throw r})}var w="1.0",A=`v${w} Decent Tools`;function et(t){let e="<!-- v",r=t.indexOf(e);if(r===-1)return null;let n=r+e.length,o=t.indexOf(" ",n);return o===-1?null:t.substring(n,o)}function y(t,e){let r=` ${e}='`,n=t.indexOf(r);if(n===-1)return null;let o=n+r.length,s=t.indexOf("'",o);return s===-1?null:t.substring(o,s)}function nt(t){let e=et(t);if(!e)throw Error("Failed to parse stage index format version.");if(e!==w)throw Error(`Unsupported stage index format version ${e}.`);return e}function k(){return{productionVersion:"",rollbackVersion:"",stageVersion:""}}function q(t,e,r,n){let o=`/_${t}/${e}/`;return`<!DOCTYPE html><html><head><title>Stage Index for ${t}</title><script>
<!-- ${A}. Hand-edit at your own risk! -->
const productionVersion='${r}';
const rollbackVersion='${n}';
const stageVersion='${e}';
window.location.href='${o}';
</script></head><body></body></html>`}async function U(t){let e=`https://decentapps.net/_${t}/index.html`,r=await fetch(e);if(!r.ok)return k();let n=await r.text();try{nt(n)}catch(a){return R(`Could not retrieve app versions from existing stage index at ${e}: ${a.message}.`),k()}let o=y(n,"productionVersion")??"",s=y(n,"rollbackVersion")??"";return{stageVersion:y(n,"stageVersion")??"",productionVersion:o,rollbackVersion:s}}var H="partner.decentapps.net";async function B(t,e,r,n,o,s){let i=s.replace(o,""),a={hostname:H,path:`/api/deployment/${r}/${n}/${i}`,port:443,method:"PUT",headers:{"Content-Type":"application/octet-stream",Authorization:`Bearer ${e}`,"x-repo-owner":t,Accept:"application/json"}},c=await I(a,s);if(c.statusCode<200||c.statusCode>=300)throw new p(`Failed to upload file to partner service. Status code: ${c.statusCode}. Response: ${c.body}`)}async function D(t,e,r,n,o,s,i){let a=i?`/api/deployment/${r}/index.html`:`/api/deployment/${r}/index.html?updateRoute=true`,c={hostname:H,path:a,port:443,method:"PUT",headers:{"Content-Type":"text/html",Authorization:`Bearer ${e}`,"x-repo-owner":t,Accept:"application/json"}},u=q(r,n,o,s),f=await F(c,u);if(f.statusCode<200||f.statusCode>=300)throw new Error(`Failed to upload file to partner service. Status code: ${f.statusCode}. Response: ${f.body}`)}async function rt(){try{let t=P(),e=T(),r=m("api-key",!0),n=m("app-name",!0),o=`${b()}/dist/`;await _(t,o);async function s(l){let d=i[l];if(d!=="")try{await B(e,r,n,t,o,d),i[l]="",++c}catch(W){console.warn(`Failed to upload file ${d}: ${W.message}.`)}}let i=await V(o),a=i.map((l,d)=>()=>s(d)),c=0,u=3,f=11;for(let l=0;l<u;++l){l>0&&console.warn(`Retrying after failed uploads... (${l+1}/${u})`);try{if(await C(a,f),c===i.length)break}catch(d){console.error(`Unexpected error while uploading files: ${d.message}.`)}}c<i.length&&(c===0&&g("Failed to upload any files. See previous warnings for details."),g(`Failed to upload all files. Only ${c} of ${i.length} files were uploaded successfully. See previous warnings for details.`));let{productionVersion:N,rollbackVersion:G}=await U(n);await D(e,r,n,t,N,G,!1);let L=`https://decentapps.net/_${n}/${t}/`;S(`Successfully deployed ${c} files to ${L}.`)}catch(t){let r=!O()||t.name==="ExpectedError"?t.message:"An unexpected error occurred.";g(r)}}rt();
